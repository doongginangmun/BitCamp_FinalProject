<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.member">

	<!-- <resultMap id="memberResult" type="memberVO"> //회원 정보를 저장할 resultMap을 정의한다.
		<result property="MEMBER_ID" column="MEMBER_ID" />  db의 있는 이름 : 값
		<result property="PASSWORD" column="PASSWORD" />
		<result property="MEMBER_NAME" column="MEMBER_NAME" />
		<result property="EMAIL" column="EMAIL" />
		<result property="PHONE" column="PHONE" />
		<result property="ZIPNO" column="ZIPNO" />
		<result property="load_address" column="load_address" />
		<result property="jibun_address" column="jibun_address" />
		<result property="rest_address" column="rest_address" />
		<result property="member_date" column="member_date" />
		<result property="birthday" column="birthday" />
		<result property="pre_score" column="pre_score" />
		<result property="this_score" column="this_score" />
		<result property="point" column="point" />
		<result property="member_status" column="member_status" />
	</resultMap>	 -->
	
	<select id="login" parameterType="memberVO" resultType="memberVO">
		<![CDATA[
			select * from member
			where member_id = #{member_id}
			and password = #{password}
		]]>
	</select>
	
	<select id="SnsLogin" parameterType="memberVO" resultType="memberVO">
		<![CDATA[
			select * from member
			where member_id = #{member_id}
		]]>
	</select>

	<!-- cdata[ 사용이유 : 특수문자 사용하는데 제한을 푼다. -->
	<insert id="insertNewMember" parameterType="memberVO">
		<![CDATA[
			insert into member(member_id,
								password,
								 member_name,
								 email,
								 phone,
								 zipNo,
								load_address,
								jibun_address,  
								rest_address,
 								birthday
 								]]>
 			<if test="member_status == '구글'">
 			,member_status
 			</if>
 								) values(
 								#{member_id},
 								 #{password}, 
 								 #{member_name},
 								  #{email}, 
 								  #{phone}, 
 								  #{zipNo}, 
								#{load_address},
								  #{jibun_address}, 
								  #{rest_address},
								   #{birthday}
			 <if test="member_status == '구글'">
 			,#{member_status}
 			</if>
								   )
								   
		
	</insert>
	
	
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   select decode(count(*),1, 'true', 0, 'false')
	   from member
	   where member_id = #{id}
	</select>
	
	<select id="findEmailInfo" parameterType="String" resultType="memberVO">
			select * from member
			where member_id = #{member_id}
	</select>
	
	<!-- 이메일로 받은 패스워드 수정 -->
	<update id="updateUserPassword" parameterType="java.util.HashMap">
		update member set password = #{password}
		where member_id = #{member_id}
	</update>
	
	<!-- 비밀번호 찾기에서 패스워드 수정 -->
	<update id="modifyPassword" parameterType="java.util.HashMap">
		update member set password = #{password}
		where member_id = #{member_id}
	</update>
	
	
	
</mapper>